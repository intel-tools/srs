on:
  workflow_call:
    inputs:
      repo:
        description: 'repo'
        required: true
        default: ''
        type: string
      rate-limit:
        description: 'rate limit'
        required: false
        default: 150
        type: number
    secrets:
      GHPAT:
        required: true

jobs:
  ossf-scorecard:
    runs-on: ubuntu-latest

    steps:
      - name: generate save directory name
        shell: bash
        id: vars
        run: |
          SREPO=$(echo -n ${{ inputs.repo }} | tr '/' .)
          echo "SREPO set to ${SREPO}"
          echo "SREPO=${SREPO}" >> $GITHUB_OUTPUT

      - name: get official score
        id: official
        run: |
          curl https://api.securityscorecards.dev/projects/github.com/${{ inputs.repo }} > ${{ steps.vars.outputs.SREPO }}.ossf-scorecard.json
          if [ -s ${{ steps.vars.outputs.SREPO }}.ossf-scorecard.json ]; then
            echo result=1 >> $GITHUB_OUTPUT
          else
            echo result=0 >> $GITHUB_OUTPUT
          fi

      - name: rate limit
        if: steps.official.outputs.result == '0'
        env:
          GHPAT: ${{ secrets.GHPAT }}
        run: |
          rl=$(curl -H "Authorization: token $GHPAT" -X GET https://api.github.com/rate_limit | jq '.rate.remaining')
          echo "Rate limit remaining: $rl"
          while [ $rl -lt ${{ inputs.rate-limit }} ]; do
            sleep 1h
            rl=$(curl -H "Authorization: token $GHPAT" -X GET https://api.github.com/rate_limit | jq '.rate.remaining')
            echo "Rate limit remaining: $rl"
          done

      - name: checkout repo
        if: steps.official.outputs.result == '0'
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo }}
          token: ${{ secrets.GHPAT }}

      - name: run OSFF scorecard
        if: steps.official.outputs.result == '0'
        uses: ossf/scorecard-action@v2.1.2
        with:
          results_file: ${{ steps.vars.outputs.SREPO }}.ossf-scorecard.json
          results_format: json
          repo_token: ${{ secrets.GHPAT }}
          publish_results: false

      - name: check score and record summary
        run: |
          score=$(jq '.score' ${{ steps.vars.outputs.SREPO }}.ossf-scorecard.json)
          echo "## OSSF scorecard aggregate score: $score" >> $GITHUB_STEP_SUMMARY

          if [ $score == "-1" ]; then
            exit 1
          fi

      - name: save results
        uses: actions/upload-artifact@v3
        with:
          retention-days: 10
          name: ${{ steps.vars.outputs.SREPO }}.ossf-scorecard
          path: ${{ steps.vars.outputs.SREPO }}.ossf-scorecard.json

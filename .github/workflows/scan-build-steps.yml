on:
  workflow_call:
    inputs:
      repo:
        description: 'repo'
        required: true
        default: ''
        type: string
jobs:
  scan-build:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}
      LLVM_VERSION: "15"
      TIMEOUT: "10m"

    defaults:
      run:
        shell: bash

    steps:
      - name: generate save directory name
        id: vars
        run: |
          srepo=$(echo ${{ inputs.repo }} | tr '/' .)

          echo "SREPO set to ${SREPO}"
          echo "SREPO=$srepo" >> $GITHUB_OUTPUT

      - name: checkout repo
        uses: actions/checkout@v3

      - name: checkout repo
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo }}
          path: repo

      - name: Get docker
        uses: actions/cache@v3
        id: get-docker
        with:
          path: scan-build.tar
          key: scan-build

      - name: Load image
        run: docker load -i scan-build.tar

      - name: scan-build
        timeout-minutes: 60
        run: docker run -v "$GITHUB_WORKSPACE":/work scan-build "${{ inputs.repo }}" "$LLVM_VERSION" "$TIMEOUT"

      - name: fix permissions
        if: ${{ always() }}
        run: |
          USER=$(whoami)
          sudo chown -R $USER.$USER ${{ steps.vars.outputs.SREPO }}

      - name: convert to json
        if: ${{ always() }}
        run: ./scan-build/convert2json.sh ${{ inputs.repo }} ${{ steps.vars.outputs.SREPO }}

      - name: Adding scan summary to Github markdown
        if: ${{ always() }}
        env:
          SREPO: ${{ steps.vars.outputs.SREPO }}
        run: |
          bugs=$(jq '.bugs | length' $SREPO/$SREPO.scan-build.json)
          functions=$(jq '.functions | length' $SREPO/$SREPO.scan-build.json)

          [[ ${bugs} -eq 0 ]] && exit 0

          echo "### ${{ inputs.repo }}: ${bugs} bugs found" >> $SREPO/summary.md
          echo "### Functions: $functions" >> $SREPO/summary.md
          echo "#### Bug categories" >> $SREPO/summary.md
          echo "| Category | Count |" >> $SREPO/summary.md
          echo "| --- | --- |" >> $SREPO/summary.md
          jq '.categories[] | "| \(.category) | \(.count) |"' $SREPO/$SREPO.scan-build.json | tr -d '"' >> $SREPO/summary.md
          echo "#### Bug types" >> $SREPO/summary.md
          echo "| Type | Count |" >> $SREPO/summary.md
          echo "| --- | --- |" >> $SREPO/summary.md
          jq '.types[] | "| \(.type) | \(.count) |"' $SREPO/$SREPO.scan-build.json | tr -d '"' >> $SREPO/summary.md

          cat $SREPO/summary.md >> $GITHUB_STEP_SUMMARY

      - name: compress result
        if: ${{ always() }}
        run: tar -czvf ${{ steps.vars.outputs.SREPO }}.${{ github.job }}.tar.gz --remove-files ${{ steps.vars.outputs.SREPO }}

      - name: save results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          retention-days: 10
          name: ${{ steps.vars.outputs.SREPO }}.${{ github.job }}
          path: ${{ steps.vars.outputs.SREPO }}.${{ github.job }}.tar.gz

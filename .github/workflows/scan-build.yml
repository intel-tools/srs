on:
  repository_dispatch:
    types: [scan-build-command]
  workflow_call:
    inputs:
      input:
        description: 'json array of inputs'
        required: true
        default: ''
        type: string
    secrets:
      GHPAT:
        required: true
jobs:
  prepare-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Cache docker
        id: cache
        uses: actions/cache@v3
        with:
          path: scan-build.tar
          key: scan-build

      - name: checkout repo
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v2

      - name: Build production image
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: scan-build/Dockerfile
          tags: scan-build:latest
          outputs: type=docker,dest=scan-build.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

  get-input:
    runs-on: ubuntu-latest
    outputs:
      input: ${{ steps.json.outputs.json }}
    steps:
      - name: Get input form slash-command
        if: github.event.client_payload.slash_command.args.named.repo != null
        id: vars
        run: |
          echo "[{" > json
          echo "\"repo\":\"${{ github.event.client_payload.slash_command.args.named.repo }}\"," >> json
          echo "\"comment-id\": \"${{ github.event.client_payload.github.payload.comment.id }}\"" >> json
          echo "}]" >> json
          echo "run-url=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_OUTPUT

      - uses: peter-evans/create-or-update-comment@v2
        if: github.event.client_payload.slash_command.args.named.repo != null
        with:
          token: ${{ secrets.GHPAT }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          body: |
            [Command run output](${{ steps.vars.outputs.run-url }})

      - name: Get input from query
        if: inputs.input != ''
        run: echo '${{ inputs.input }}' > json

      - id: json
        run: |
          JSON=$(cat json)
          echo json=$JSON >> $GITHUB_OUTPUT

  split:
    needs: get-input
    uses: ./.github/workflows/work2matrix.yml
    with:
      input: ${{ needs.get-input.outputs.input }}

  m1:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix1 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix1)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}
      comment-id: ${{ matrix.comment-id }}

  m2:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix2 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix2)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}

  m3:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix3 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix3)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}

  m4:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix4 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix4)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}

  m5:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix5 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix5)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}

  m6:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix6 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix6)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}

  m7:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix7 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix7)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}

  m8:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix8 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix8)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}

  m9:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix9 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix9)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}

  m10:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix10 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix10)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}

  m11:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix11 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix11)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}

  m12:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix12 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix12)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}

  m13:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix13 != null
    secrets: inherit
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix13)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}

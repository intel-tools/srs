on:
  workflow_call:
    inputs:
      input:
        description: 'json array of inputs'
        required: true
        default: ''
        type: string
jobs:
  prepare-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Cache docker
        id: cache
        uses: actions/cache@v3
        with:
          path: scan-build.tar
          key: scan-build

      - name: checkout repo
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v2

      - name: Build production image
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: scan-build/Dockerfile
          tags: scan-build:latest
          outputs: type=docker,dest=scan-build.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

  split:
    uses: ./.github/workflows/work2matrix.yml
    with:
      input: ${{ inputs.input }}

  m1:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix1 != null
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix1)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}
      autoconf: ${{ matrix.autoconf }}
      meson: ${{ matrix.meson }}
      cmake: ${{ matrix.cmake }}

  m2:
    needs: [prepare-docker, split]
    if: needs.split.outputs.matrix2 != null
    strategy:
      matrix: ${{fromJson(needs.split.outputs.matrix2)}}
      fail-fast: false # don't stop other jobs if one fails
    uses: ./.github/workflows/scan-build-steps.yml
    with:
      repo: ${{ matrix.repo }}
      autoconf: ${{ matrix.autoconf }}
      meson: ${{ matrix.meson }}
      cmake: ${{ matrix.cmake }}

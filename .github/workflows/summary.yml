name: Aggregate results and create summary
on:
  workflow_dispatch:
    inputs:
      run-id:
        description: 'The workflow run-id to look at'
        required: true
        type: string
      comment-id:
        description: 'The comment-id to update'
        required: false
        type: string
jobs:
  summary:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GHPAT }}
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GHPAT }}

      - name: Download artifacts with rate limit
        run: ./query/download-artifacts.sh ${{ inputs.run-id }}

      - name: Summarize results
        run: ./query/summary.sh ${{ inputs.run-id }}

      - name: Github step summary
        run: cat summary.md >> $GITHUB_STEP_SUMMARY

      - name: Update comment
        if: inputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.GHPAT }}
          comment-id: ${{ inputs.comment-id }}
          body-file: summary.md
          reactions: hooray

      - name: save results
        uses: actions/upload-artifact@v3
        with:
          retention-days: 90
          name: aggregate-results
          path: |
            bug_breakdown.json
            score_vs_bugs.csv
            summary.md
            all-results.tar.gz

      - name: save scan results to gh pages
        run: |
          git fetch origin gh-pages --depth 1
          git checkout gh-pages

          git config --global user.name ${{ github.actor }}
          git config --global user.email '${{ github.actor }}@github.com'

          cd=$(date +"%Y.%m.%d")
          year=$(date +"%Y")
          d="$cd-${{ github.run_id }}"
          bugs=$(jq '.bugs' bug_breakdown.json)

          mkdir -p scans/$d

          cp ${{ inputs.run-id }}/query-repositories/filtered-repos.json scans/$d
          cp all-results.tar.gz scans/$d
          cp bug_breakdown.json scans/$d
          cp score_vs_bugs.csv scans/$d
          mv scan-build-reports/* scans/$d

          echo "---" > scans/$d/index.md
          echo "layout: default" >> scans/$d/index.md
          echo "---" >> scans/$d/index.md
          echo "" >> scans/$d/index.md

          echo "## Scan date: $cd" >> scans/$d/index.md
          echo "[All results (tar.gz)](./all-results.tar.gz) [Repo list (JSON)](./filtered-repos.json) [Bug breakdown (JSON)](./bug_breakdown.json) [Score vs Bugs (CSV)](./score_vs_bugs.csv)" >> scans/$d/index.md

          echo "" >> scans/$d/index.md
          echo "***" >> scans/$d/index.md
          echo "" >> scans/$d/index.md

          cat ${{ inputs.run-id }}/query-repositories/query-summary.md >> scans/$d/index.md
          cat summary.md >> scans/$d/index.md

          echo "[back](../..)" >> scans/$d/index.md

          echo "$d,$cd,$year,$bugs" >> _data/scans.csv

          git add scans/$d
          git add _data/scans.csv

          git commit -m "Add scan results of date $d"
          git push
